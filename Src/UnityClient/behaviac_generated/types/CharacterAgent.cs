// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

public class CharacterAgent : behaviac.Agent
///<<< BEGIN WRITING YOUR CODE CharacterAgent
///<<< END WRITING YOUR CODE
{
	public bool CanUseSkill()
	{
///<<< BEGIN WRITING YOUR CODE CanUseSkill
        return null == GetOwner().skill.Instance;
///<<< END WRITING YOUR CODE
	}

	public behaviac.EBTStatus MoveToPlayer()
	{
///<<< BEGIN WRITING YOUR CODE MoveToPlayer
        var context = Contexts.sharedInstance.game;
        var mainPlayer = context.mainPlayerEntity;
        var self = GetOwner();

        if (IsSkillActivite() || IsBuffActivite())
            return behaviac.EBTStatus.BT_SUCCESS;

        if (Util.Vector3.Distance(new Util.Vector3(mainPlayer.position.x, mainPlayer.position.y, mainPlayer.position.z), new Util.Vector3(self.position.x, self.position.y, self.position.z)) > 3)
        {
            float dir = Util.Mathf.Atan2(mainPlayer.position.x - self.position.x, mainPlayer.position.z - self.position.z);
            self.ReplaceRotation(Entitas.Data.RotateState.UserRotate, dir);
            self.ReplaceMovement(Entitas.Data.MoveState.UserMoving, dir, 0);
        }
        else
        {
            self.ReplaceMovement(Entitas.Data.MoveState.Idle, 0, 0);
        }
		return behaviac.EBTStatus.BT_SUCCESS;
///<<< END WRITING YOUR CODE
	}

	public void UseSkill(int SkillId)
	{
///<<< BEGIN WRITING YOUR CODE UseSkill
        GameEntity self = GetOwner();
        UnityClient.SkillSystem.Instance.StartSkill(self, self, SkillId);
///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE CLASS_PART

        public void Init(uint id)
    {
        m_EntityId = id;
    }
    private GameEntity GetOwner()
    {
        return Contexts.sharedInstance.game.GetEntityWithId(m_EntityId);
    }
    private bool IsSkillActivite()
    {
        GameEntity self = GetOwner();
        return self.hasSkill && null != self.skill.Instance;
    }
    private bool IsBuffActivite()
    {
        GameEntity self = GetOwner();
        return self.hasBuff && self.buff.InstanceInfos.Count > 0;
    }
    private uint m_EntityId;

///<<< END WRITING YOUR CODE

}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE

