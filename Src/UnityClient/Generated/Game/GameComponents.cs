//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mainPlayerEntity { get { return GetGroup(GameMatcher.MainPlayer).GetSingleEntity(); } }

    public bool isMainPlayer {
        get { return mainPlayerEntity != null; }
        set {
            var entity = mainPlayerEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isMainPlayer = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity inputEntity { get { return GetGroup(GameMatcher.Input).GetSingleEntity(); } }
    public Entitas.Component.InputComponent input { get { return inputEntity.input; } }
    public bool hasInput { get { return inputEntity != null; } }

    public GameEntity SetInput(bool newIsMoving, float newMovingDir) {
        if (hasInput) {
            throw new Entitas.EntitasException("Could not set Input!\n" + this + " already has an entity with Entitas.Component.InputComponent!",
                "You should check if the context already has a inputEntity before setting it or use context.ReplaceInput().");
        }
        var entity = CreateEntity();
        entity.AddInput(newIsMoving, newMovingDir);
        return entity;
    }

    public void ReplaceInput(bool newIsMoving, float newMovingDir) {
        var entity = inputEntity;
        if (entity == null) {
            entity = SetInput(newIsMoving, newMovingDir);
        } else {
            entity.ReplaceInput(newIsMoving, newMovingDir);
        }
    }

    public void RemoveInput() {
        inputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timeInfoEntity { get { return GetGroup(GameMatcher.TimeInfo).GetSingleEntity(); } }
    public Entitas.Component.TimeInfoComponent timeInfo { get { return timeInfoEntity.timeInfo; } }
    public bool hasTimeInfo { get { return timeInfoEntity != null; } }

    public GameEntity SetTimeInfo(float newTime, float newDeltaTime) {
        if (hasTimeInfo) {
            throw new Entitas.EntitasException("Could not set TimeInfo!\n" + this + " already has an entity with Entitas.Component.TimeInfoComponent!",
                "You should check if the context already has a timeInfoEntity before setting it or use context.ReplaceTimeInfo().");
        }
        var entity = CreateEntity();
        entity.AddTimeInfo(newTime, newDeltaTime);
        return entity;
    }

    public void ReplaceTimeInfo(float newTime, float newDeltaTime) {
        var entity = timeInfoEntity;
        if (entity == null) {
            entity = SetTimeInfo(newTime, newDeltaTime);
        } else {
            entity.ReplaceTimeInfo(newTime, newDeltaTime);
        }
    }

    public void RemoveTimeInfo() {
        timeInfoEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity spatialEntity { get { return GetGroup(GameMatcher.Spatial).GetSingleEntity(); } }
    public Entitas.Component.SpatialComponent spatial { get { return spatialEntity.spatial; } }
    public bool hasSpatial { get { return spatialEntity != null; } }

    public GameEntity SetSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        if (hasSpatial) {
            throw new Entitas.EntitasException("Could not set Spatial!\n" + this + " already has an entity with Entitas.Component.SpatialComponent!",
                "You should check if the context already has a spatialEntity before setting it or use context.ReplaceSpatial().");
        }
        var entity = CreateEntity();
        entity.AddSpatial(newCellMgr, newFinder);
        return entity;
    }

    public void ReplaceSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var entity = spatialEntity;
        if (entity == null) {
            entity = SetSpatial(newCellMgr, newFinder);
        } else {
            entity.ReplaceSpatial(newCellMgr, newFinder);
        }
    }

    public void RemoveSpatial() {
        spatialEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity sceneEntity { get { return GetGroup(GameMatcher.Scene).GetSingleEntity(); } }
    public Entitas.Component.SceneComponent scene { get { return sceneEntity.scene; } }
    public bool hasScene { get { return sceneEntity != null; } }

    public GameEntity SetScene(Entitas.Data.SceneConfig newConfig, Entitas.Data.SceneInstanceInfo newScriptInstance) {
        if (hasScene) {
            throw new Entitas.EntitasException("Could not set Scene!\n" + this + " already has an entity with Entitas.Component.SceneComponent!",
                "You should check if the context already has a sceneEntity before setting it or use context.ReplaceScene().");
        }
        var entity = CreateEntity();
        entity.AddScene(newConfig, newScriptInstance);
        return entity;
    }

    public void ReplaceScene(Entitas.Data.SceneConfig newConfig, Entitas.Data.SceneInstanceInfo newScriptInstance) {
        var entity = sceneEntity;
        if (entity == null) {
            entity = SetScene(newConfig, newScriptInstance);
        } else {
            entity.ReplaceScene(newConfig, newScriptInstance);
        }
    }

    public void RemoveScene() {
        sceneEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.MovementComponent movement { get { return (Entitas.Component.MovementComponent)GetComponent(GameComponentsLookup.Movement); } }
    public bool hasMovement { get { return HasComponent(GameComponentsLookup.Movement); } }

    public void AddMovement(Entitas.Data.MoveState newState, float newMovingDir, int newLastAdjust) {
        var index = GameComponentsLookup.Movement;
        var component = CreateComponent<Entitas.Component.MovementComponent>(index);
        component.State = newState;
        component.MovingDir = newMovingDir;
        component.LastAdjust = newLastAdjust;
        AddComponent(index, component);
    }

    public void ReplaceMovement(Entitas.Data.MoveState newState, float newMovingDir, int newLastAdjust) {
        var index = GameComponentsLookup.Movement;
        var component = CreateComponent<Entitas.Component.MovementComponent>(index);
        component.State = newState;
        component.MovingDir = newMovingDir;
        component.LastAdjust = newLastAdjust;
        ReplaceComponent(index, component);
    }

    public void RemoveMovement() {
        RemoveComponent(GameComponentsLookup.Movement);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.PositionComponent position { get { return (Entitas.Component.PositionComponent)GetComponent(GameComponentsLookup.Position); } }
    public bool hasPosition { get { return HasComponent(GameComponentsLookup.Position); } }

    public void AddPosition(float newX, float newY, float newZ) {
        var index = GameComponentsLookup.Position;
        var component = CreateComponent<Entitas.Component.PositionComponent>(index);
        component.x = newX;
        component.y = newY;
        component.z = newZ;
        AddComponent(index, component);
    }

    public void ReplacePosition(float newX, float newY, float newZ) {
        var index = GameComponentsLookup.Position;
        var component = CreateComponent<Entitas.Component.PositionComponent>(index);
        component.x = newX;
        component.y = newY;
        component.z = newZ;
        ReplaceComponent(index, component);
    }

    public void RemovePosition() {
        RemoveComponent(GameComponentsLookup.Position);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.RotationComponent rotation { get { return (Entitas.Component.RotationComponent)GetComponent(GameComponentsLookup.Rotation); } }
    public bool hasRotation { get { return HasComponent(GameComponentsLookup.Rotation); } }

    public void AddRotation(Entitas.Data.RotateState newState, float newRotateDir) {
        var index = GameComponentsLookup.Rotation;
        var component = CreateComponent<Entitas.Component.RotationComponent>(index);
        component.State = newState;
        component.RotateDir = newRotateDir;
        AddComponent(index, component);
    }

    public void ReplaceRotation(Entitas.Data.RotateState newState, float newRotateDir) {
        var index = GameComponentsLookup.Rotation;
        var component = CreateComponent<Entitas.Component.RotationComponent>(index);
        component.State = newState;
        component.RotateDir = newRotateDir;
        ReplaceComponent(index, component);
    }

    public void RemoveRotation() {
        RemoveComponent(GameComponentsLookup.Rotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly Entitas.Component.AnimationComponent animationComponent = new Entitas.Component.AnimationComponent();

    public bool isAnimation {
        get { return HasComponent(GameComponentsLookup.Animation); }
        set {
            if (value != isAnimation) {
                if (value) {
                    AddComponent(GameComponentsLookup.Animation, animationComponent);
                } else {
                    RemoveComponent(GameComponentsLookup.Animation);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.ResourceComponent resource { get { return (Entitas.Component.ResourceComponent)GetComponent(GameComponentsLookup.Resource); } }
    public bool hasResource { get { return HasComponent(GameComponentsLookup.Resource); } }

    public void AddResource(uint newResourceId) {
        var index = GameComponentsLookup.Resource;
        var component = CreateComponent<Entitas.Component.ResourceComponent>(index);
        component.ResourceId = newResourceId;
        AddComponent(index, component);
    }

    public void ReplaceResource(uint newResourceId) {
        var index = GameComponentsLookup.Resource;
        var component = CreateComponent<Entitas.Component.ResourceComponent>(index);
        component.ResourceId = newResourceId;
        ReplaceComponent(index, component);
    }

    public void RemoveResource() {
        RemoveComponent(GameComponentsLookup.Resource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.IdComponent id { get { return (Entitas.Component.IdComponent)GetComponent(GameComponentsLookup.Id); } }
    public bool hasId { get { return HasComponent(GameComponentsLookup.Id); } }

    public void AddId(uint newValue) {
        var index = GameComponentsLookup.Id;
        var component = CreateComponent<Entitas.Component.IdComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceId(uint newValue) {
        var index = GameComponentsLookup.Id;
        var component = CreateComponent<Entitas.Component.IdComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveId() {
        RemoveComponent(GameComponentsLookup.Id);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly Entitas.Component.MainPlayerComponent mainPlayerComponent = new Entitas.Component.MainPlayerComponent();

    public bool isMainPlayer {
        get { return HasComponent(GameComponentsLookup.MainPlayer); }
        set {
            if (value != isMainPlayer) {
                if (value) {
                    AddComponent(GameComponentsLookup.MainPlayer, mainPlayerComponent);
                } else {
                    RemoveComponent(GameComponentsLookup.MainPlayer);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.InputComponent input { get { return (Entitas.Component.InputComponent)GetComponent(GameComponentsLookup.Input); } }
    public bool hasInput { get { return HasComponent(GameComponentsLookup.Input); } }

    public void AddInput(bool newIsMoving, float newMovingDir) {
        var index = GameComponentsLookup.Input;
        var component = CreateComponent<Entitas.Component.InputComponent>(index);
        component.IsMoving = newIsMoving;
        component.MovingDir = newMovingDir;
        AddComponent(index, component);
    }

    public void ReplaceInput(bool newIsMoving, float newMovingDir) {
        var index = GameComponentsLookup.Input;
        var component = CreateComponent<Entitas.Component.InputComponent>(index);
        component.IsMoving = newIsMoving;
        component.MovingDir = newMovingDir;
        ReplaceComponent(index, component);
    }

    public void RemoveInput() {
        RemoveComponent(GameComponentsLookup.Input);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.TimeInfoComponent timeInfo { get { return (Entitas.Component.TimeInfoComponent)GetComponent(GameComponentsLookup.TimeInfo); } }
    public bool hasTimeInfo { get { return HasComponent(GameComponentsLookup.TimeInfo); } }

    public void AddTimeInfo(float newTime, float newDeltaTime) {
        var index = GameComponentsLookup.TimeInfo;
        var component = CreateComponent<Entitas.Component.TimeInfoComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        AddComponent(index, component);
    }

    public void ReplaceTimeInfo(float newTime, float newDeltaTime) {
        var index = GameComponentsLookup.TimeInfo;
        var component = CreateComponent<Entitas.Component.TimeInfoComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeInfo() {
        RemoveComponent(GameComponentsLookup.TimeInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.SpatialComponent spatial { get { return (Entitas.Component.SpatialComponent)GetComponent(GameComponentsLookup.Spatial); } }
    public bool hasSpatial { get { return HasComponent(GameComponentsLookup.Spatial); } }

    public void AddSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var index = GameComponentsLookup.Spatial;
        var component = CreateComponent<Entitas.Component.SpatialComponent>(index);
        component.CellMgr = newCellMgr;
        component.Finder = newFinder;
        AddComponent(index, component);
    }

    public void ReplaceSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var index = GameComponentsLookup.Spatial;
        var component = CreateComponent<Entitas.Component.SpatialComponent>(index);
        component.CellMgr = newCellMgr;
        component.Finder = newFinder;
        ReplaceComponent(index, component);
    }

    public void RemoveSpatial() {
        RemoveComponent(GameComponentsLookup.Spatial);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.SceneComponent scene { get { return (Entitas.Component.SceneComponent)GetComponent(GameComponentsLookup.Scene); } }
    public bool hasScene { get { return HasComponent(GameComponentsLookup.Scene); } }

    public void AddScene(Entitas.Data.SceneConfig newConfig, Entitas.Data.SceneInstanceInfo newScriptInstance) {
        var index = GameComponentsLookup.Scene;
        var component = CreateComponent<Entitas.Component.SceneComponent>(index);
        component.Config = newConfig;
        component.ScriptInstance = newScriptInstance;
        AddComponent(index, component);
    }

    public void ReplaceScene(Entitas.Data.SceneConfig newConfig, Entitas.Data.SceneInstanceInfo newScriptInstance) {
        var index = GameComponentsLookup.Scene;
        var component = CreateComponent<Entitas.Component.SceneComponent>(index);
        component.Config = newConfig;
        component.ScriptInstance = newScriptInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveScene() {
        RemoveComponent(GameComponentsLookup.Scene);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.SkillComponent skill { get { return (Entitas.Component.SkillComponent)GetComponent(GameComponentsLookup.Skill); } }
    public bool hasSkill { get { return HasComponent(GameComponentsLookup.Skill); } }

    public void AddSkill(Entitas.Data.SkillInstanceInfo newInstance) {
        var index = GameComponentsLookup.Skill;
        var component = CreateComponent<Entitas.Component.SkillComponent>(index);
        component.Instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceSkill(Entitas.Data.SkillInstanceInfo newInstance) {
        var index = GameComponentsLookup.Skill;
        var component = CreateComponent<Entitas.Component.SkillComponent>(index);
        component.Instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveSkill() {
        RemoveComponent(GameComponentsLookup.Skill);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovement;

    public static Entitas.IMatcher<GameEntity> Movement {
        get {
            if (_matcherMovement == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Movement);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovement = matcher;
            }

            return _matcherMovement;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPosition;

    public static Entitas.IMatcher<GameEntity> Position {
        get {
            if (_matcherPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Position);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPosition = matcher;
            }

            return _matcherPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotation;

    public static Entitas.IMatcher<GameEntity> Rotation {
        get {
            if (_matcherRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Rotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotation = matcher;
            }

            return _matcherRotation;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimation;

    public static Entitas.IMatcher<GameEntity> Animation {
        get {
            if (_matcherAnimation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Animation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimation = matcher;
            }

            return _matcherAnimation;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherResource;

    public static Entitas.IMatcher<GameEntity> Resource {
        get {
            if (_matcherResource == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Resource);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherResource = matcher;
            }

            return _matcherResource;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherId;

    public static Entitas.IMatcher<GameEntity> Id {
        get {
            if (_matcherId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Id);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherId = matcher;
            }

            return _matcherId;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMainPlayer;

    public static Entitas.IMatcher<GameEntity> MainPlayer {
        get {
            if (_matcherMainPlayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MainPlayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMainPlayer = matcher;
            }

            return _matcherMainPlayer;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInput;

    public static Entitas.IMatcher<GameEntity> Input {
        get {
            if (_matcherInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Input);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInput = matcher;
            }

            return _matcherInput;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimeInfo;

    public static Entitas.IMatcher<GameEntity> TimeInfo {
        get {
            if (_matcherTimeInfo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimeInfo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimeInfo = matcher;
            }

            return _matcherTimeInfo;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpatial;

    public static Entitas.IMatcher<GameEntity> Spatial {
        get {
            if (_matcherSpatial == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Spatial);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpatial = matcher;
            }

            return _matcherSpatial;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScene;

    public static Entitas.IMatcher<GameEntity> Scene {
        get {
            if (_matcherScene == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Scene);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScene = matcher;
            }

            return _matcherScene;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSkill;

    public static Entitas.IMatcher<GameEntity> Skill {
        get {
            if (_matcherSkill == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Skill);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSkill = matcher;
            }

            return _matcherSkill;
        }
    }
}
