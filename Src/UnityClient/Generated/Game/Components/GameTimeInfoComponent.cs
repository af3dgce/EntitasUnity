//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timeInfoEntity { get { return GetGroup(GameMatcher.TimeInfo).GetSingleEntity(); } }
    public Entitas.Component.TimeInfoComponent timeInfo { get { return timeInfoEntity.timeInfo; } }
    public bool hasTimeInfo { get { return timeInfoEntity != null; } }

    public GameEntity SetTimeInfo(float newTime, float newDeltaTime) {
        if (hasTimeInfo) {
            throw new Entitas.EntitasException("Could not set TimeInfo!\n" + this + " already has an entity with Entitas.Component.TimeInfoComponent!",
                "You should check if the context already has a timeInfoEntity before setting it or use context.ReplaceTimeInfo().");
        }
        var entity = CreateEntity();
        entity.AddTimeInfo(newTime, newDeltaTime);
        return entity;
    }

    public void ReplaceTimeInfo(float newTime, float newDeltaTime) {
        var entity = timeInfoEntity;
        if (entity == null) {
            entity = SetTimeInfo(newTime, newDeltaTime);
        } else {
            entity.ReplaceTimeInfo(newTime, newDeltaTime);
        }
    }

    public void RemoveTimeInfo() {
        timeInfoEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.TimeInfoComponent timeInfo { get { return (Entitas.Component.TimeInfoComponent)GetComponent(GameComponentsLookup.TimeInfo); } }
    public bool hasTimeInfo { get { return HasComponent(GameComponentsLookup.TimeInfo); } }

    public void AddTimeInfo(float newTime, float newDeltaTime) {
        var index = GameComponentsLookup.TimeInfo;
        var component = CreateComponent<Entitas.Component.TimeInfoComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        AddComponent(index, component);
    }

    public void ReplaceTimeInfo(float newTime, float newDeltaTime) {
        var index = GameComponentsLookup.TimeInfo;
        var component = CreateComponent<Entitas.Component.TimeInfoComponent>(index);
        component.Time = newTime;
        component.DeltaTime = newDeltaTime;
        ReplaceComponent(index, component);
    }

    public void RemoveTimeInfo() {
        RemoveComponent(GameComponentsLookup.TimeInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimeInfo;

    public static Entitas.IMatcher<GameEntity> TimeInfo {
        get {
            if (_matcherTimeInfo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TimeInfo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimeInfo = matcher;
            }

            return _matcherTimeInfo;
        }
    }
}
