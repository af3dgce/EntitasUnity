//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity spatialEntity { get { return GetGroup(GameMatcher.Spatial).GetSingleEntity(); } }
    public Entitas.Component.SpatialComponent spatial { get { return spatialEntity.spatial; } }
    public bool hasSpatial { get { return spatialEntity != null; } }

    public GameEntity SetSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        if (hasSpatial) {
            throw new Entitas.EntitasException("Could not set Spatial!\n" + this + " already has an entity with Entitas.Component.SpatialComponent!",
                "You should check if the context already has a spatialEntity before setting it or use context.ReplaceSpatial().");
        }
        var entity = CreateEntity();
        entity.AddSpatial(newCellMgr, newFinder);
        return entity;
    }

    public void ReplaceSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var entity = spatialEntity;
        if (entity == null) {
            entity = SetSpatial(newCellMgr, newFinder);
        } else {
            entity.ReplaceSpatial(newCellMgr, newFinder);
        }
    }

    public void RemoveSpatial() {
        spatialEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.SpatialComponent spatial { get { return (Entitas.Component.SpatialComponent)GetComponent(GameComponentsLookup.Spatial); } }
    public bool hasSpatial { get { return HasComponent(GameComponentsLookup.Spatial); } }

    public void AddSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var index = GameComponentsLookup.Spatial;
        var component = CreateComponent<Entitas.Component.SpatialComponent>(index);
        component.CellMgr = newCellMgr;
        component.Finder = newFinder;
        AddComponent(index, component);
    }

    public void ReplaceSpatial(Spatial.CellManager newCellMgr, Spatial.JumpPointFinder newFinder) {
        var index = GameComponentsLookup.Spatial;
        var component = CreateComponent<Entitas.Component.SpatialComponent>(index);
        component.CellMgr = newCellMgr;
        component.Finder = newFinder;
        ReplaceComponent(index, component);
    }

    public void RemoveSpatial() {
        RemoveComponent(GameComponentsLookup.Spatial);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpatial;

    public static Entitas.IMatcher<GameEntity> Spatial {
        get {
            if (_matcherSpatial == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Spatial);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpatial = matcher;
            }

            return _matcherSpatial;
        }
    }
}
