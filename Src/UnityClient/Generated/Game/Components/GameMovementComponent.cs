//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Entitas.Component.MovementComponent movement { get { return (Entitas.Component.MovementComponent)GetComponent(GameComponentsLookup.Movement); } }
    public bool hasMovement { get { return HasComponent(GameComponentsLookup.Movement); } }

    public void AddMovement(Entitas.Data.MoveState newState, float newMovingDir, int newLastAdjust) {
        var index = GameComponentsLookup.Movement;
        var component = CreateComponent<Entitas.Component.MovementComponent>(index);
        component.State = newState;
        component.MovingDir = newMovingDir;
        component.LastAdjust = newLastAdjust;
        AddComponent(index, component);
    }

    public void ReplaceMovement(Entitas.Data.MoveState newState, float newMovingDir, int newLastAdjust) {
        var index = GameComponentsLookup.Movement;
        var component = CreateComponent<Entitas.Component.MovementComponent>(index);
        component.State = newState;
        component.MovingDir = newMovingDir;
        component.LastAdjust = newLastAdjust;
        ReplaceComponent(index, component);
    }

    public void RemoveMovement() {
        RemoveComponent(GameComponentsLookup.Movement);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovement;

    public static Entitas.IMatcher<GameEntity> Movement {
        get {
            if (_matcherMovement == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Movement);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovement = matcher;
            }

            return _matcherMovement;
        }
    }
}
